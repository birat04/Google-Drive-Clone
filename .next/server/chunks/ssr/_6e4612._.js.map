{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/components/AuthForm.tsx"],"sourcesContent":["\"use client\"\nimport { zodResolver } from \"@hookform/resolvers/zod\"\nimport { useForm } from \"react-hook-form\"\nimport { z } from \"zod\"\n\nconst formSchema = z.object({\n  username: z.string().min(2).max(50),\n})\n\ntype FormType = \"sign-in\" | \"sign-up\"\n\nconst AuthForm = ({type}: {type: FormType}) => {\n    const form = useForm<z.infer<typeof formSchema>>({\n    resolver: zodResolver(formSchema),\n    defaultValues: {\n      username: \"\",\n    },\n  })\n \n  function onSubmit(values: z.infer<typeof formSchema>) {\n    \n    console.log(values)\n  }\n\n  return (\n    <form onSubmit={form.handleSubmit(onSubmit)}>\n      <div>\n        AuthForm - {type}\n      </div>\n      <input\n        type=\"text\"\n        placeholder=\"Username\"\n        {...form.register(\"username\")}\n      />\n      <button type=\"submit\">\n        Submit\n      </button>\n    </form>\n  )\n  \n}\n\nexport default AuthForm"],"names":[],"mappings":";;;;AACA;AAEA;AAAA;AADA;AAFA;;;;;AAKA,MAAM,aAAa,iLAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC1B,UAAU,iLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC;AAClC;AAIA,MAAM,WAAW,CAAC,EAAC,IAAI,EAAmB;IACtC,MAAM,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAA8B;QACjD,UAAU,CAAA,GAAA,8JAAA,CAAA,cAAW,AAAD,EAAE;QACtB,eAAe;YACb,UAAU;QACZ;IACF;IAEA,SAAS,SAAS,MAAkC;QAElD,QAAQ,GAAG,CAAC;IACd;IAEA,qBACE,8OAAC;QAAK,UAAU,KAAK,YAAY,CAAC;;0BAChC,8OAAC;;oBAAI;oBACS;;;;;;;0BAEd,8OAAC;gBACC,MAAK;gBACL,aAAY;gBACX,GAAG,KAAK,QAAQ,CAAC,WAAW;;;;;;0BAE/B,8OAAC;gBAAO,MAAK;0BAAS;;;;;;;;;;;;AAM5B;uCAEe"}},
    {"offset": {"line": 71, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}